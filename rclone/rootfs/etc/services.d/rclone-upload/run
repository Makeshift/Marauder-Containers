#!/usr/bin/with-contenv sh
PREFIX=Media/
SOURCE=/shared/separate/upload/$PREFIX
DEST=uploadgdrive:/$PREFIX
CONF_FILE=/config/.rclone.conf
RCLONE_HOST="127.0.0.1"
RCLONE_PORT="5572"
RCLONE_ARGS="--fast-list -v --checkers 12 --buffer-size 16M --transfers 2 --use-mmap --low-level-retries 3 --multi-thread-cutoff 25M --multi-thread-streams 8 --no-update-modtime"
TMP_FILE=/tmp/rclone.uploads

LOG="[services.d] [rclone-upload]-$(s6-basename ${0}):"

echo "$LOG Starting upload service"
while true; do 
    echo "$LOG Checking if $SOURCE exists..."
    if [ -d "$SOURCE" ]; then
        echo "$LOG Starting upload..."
        # Get a static list of uploads (Using json, because I need a list of items without dirs)
        UPLOAD_LIST=$(rclone --config "$CONF_FILE" lsf -R --files-only "$SOURCE" --min-age 1h)
        # Print the static list to file
        printf "%s" "$UPLOAD_LIST" > $TMP_FILE
        # Copy everything to the mount first to ensure that it's all still available while we're uploading
        rclone --config "$CONF_FILE" copy --files-from "$TMP_FILE" "$SOURCE" "$DEST" --no-traverse $RCLONE_ARGS
        # Do the 'move', which in theory will just delete the files on the local filesystem
        rclone --config "$CONF_FILE" move --files-from "$TMP_FILE" "$SOURCE" "$DEST" --delete-empty-src-dirs --no-traverse $RCLONE_ARGS
        echo "$LOG Upload complete"
        # Clean up after ourselves
        rm $TMP_FILE

        # Mass refresh everything we uploaded so nothing has a panic attack
        IFS='
        '
        for p in $UPLOAD_LIST; do
            # Remove quotes
            p="${p%\"}"
            p="${p#\"}"
            # Add media folder prefix
            p=${PREFIX}${p}
            #echo "$LOG Telling Rclone @ ${RCLONE_HOST}:${RCLONE_PORT} to vfs/refresh ${p}"
            if curl -fs -X POST "${RCLONE_HOST}:${RCLONE_PORT}/vfs/refresh?dir=${p}"; then
                #echo "$LOG Rclone VFS refreshed successfully: ${p}"
                true
            else 
                echo "$LOG Failed to VFS refresh, may not be visible to client: ${p}"
            fi

            #echo "$LOG Telling Rclone @ ${HOST}:${PORT} to cache/expire ${p}"
            if curl -fs -X POST "${HOST}:${PORT}/cache/expire?remote=${p}"; then
                #echo "$LOG Rclone cache refreshed successfully: ${p}"
                true
            else 
                echo "$LOG Failed to cache refresh, may not be visible to client: ${p}"
            fi
        
        done
    else
        echo "$LOG $SOURCE does not exist, skipping upload."
    fi
    sleep 10m
done